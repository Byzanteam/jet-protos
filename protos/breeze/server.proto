syntax = "proto3";

package server;

// Plugin service
service Plugins {
  // Get a plugin's endpoint
  rpc GetEndpoint(PluginMessages.GetEndpoint.Request)
      returns (PluginMessages.GetEndpoint.Response);
}

// JS module service
service Modules {
  // Resolve a module specifier to an absolute URL,
  // the algorithm described here:
  // https://html.spec.whatwg.org/multipage/webappapis.html#resolve-a-module-specifier
  rpc resolve(ModuleMessages.Resolve.Request) returns (ModuleMessages.Resolve.Response);
  // Load source code
  rpc Load(ModuleMessages.Load.Request) returns (ModuleMessages.Load.Response);
}

message PluginMessages {
  message GetEndpoint {
    message Request {
      string deployment_id = 1;
      string instance_name = 2;
    }

    message Header {
      string key = 1;
      string value = 2;
    }

    message Response {
      string url = 1;
      repeated Header headers = 2;
    }
  }
}

message ModuleMessages {
  message Resolve {
    message Request {
      string deployment_id = 1;
      // The module specifier to resolve
      string specifier = 2;
      // The URL of the document that initiated the request
      string referrer = 3;
    }

    message Response {
      // Absolute URL, returns file:// URL for local files
      string specifier = 1;
    }
  }

  message Load {
    message Request {
      string deployment_id = 1;
      // The absolute URL resolved by the Resolve request
      string specifier = 2;
    }

    message Response {
      string code = 1;
    }
  }
}
